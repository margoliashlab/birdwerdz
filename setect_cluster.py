import numpy as np
import h5py
from scipy.cluster.vq import vq
import os

def main():
        p = argparse.ArgumentParser(prog="select_cluster", 
                               description="""Select clusters containing real motifs and discard the rest""")
        p.add_argument("motif-file", help="""An arf(hdf5) file generated by classify.py""", nargs='+')
        p.add_argument("-o, output-file", help="""Name of output file which will contain only motifs from selected clusters.  If same as input file, will delete motifs from the file.""", required=True)
        options = p.parse_args()
        
        os.system('cp ' + options.motif_file + options.output_file)        
        with h5py.File(options.ouput_file, 'r+'):
            for entry in arf.values():
                if not isinstance(entry,h5py.Group) or 'motifs' not in entry.keys():
                    continue
                
                amp_vecs= np.array([m['motifs']['spectrograms'].sum(0) for m in entry['motifs']])
                id = vq(amp_vecs, arf['centroids'])
                new_motifs=np.delete(entry['motifs'],np.where(
                        [i not in options.clusters for i in id])[0])
                                   
                del entry['motifs']
                entry.create_dataset('motifs',data=new_motifs)


if __name__=='__main__':
    main()
